name: Release

on:
  release:
    types: [ published, prereleased ]

jobs:
  prep:
    name: Prepare
    runs-on: ubuntu-latest

    env:
      TAG: ${{ github.event.release.tag_name }}

    outputs:
      tag_name: ${{ steps.generate-tag-name.outputs.tag }}
      latest: ${{ steps.set-latest.outputs.latest }}

    steps:
    - name: Tag Follows SemVer
      run: |
        if [[ ! "${TAG}" =~ ^v?[0-9]+\.[0-9]+\.[0-9]+(-(alpha|rc)\.[0-9]+)?$ ]]; then
          echo "Invalid SemVer tag: ${TAG}" >&2
          exit 1
        fi

    - name: Generate Tag Name
      id: generate-tag-name
      run: |
        # remove v prefix
        IMAGE_TAG=${TAG#v}

        echo -n "tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT

    #Â only tag as latest if the release is set to latest
    - name: set tag as latest
      # if: "!github.event.release.prerelease"
      run: |
        if [ "${{ github.event.release.prerelease }}" == "false" ]; then
          echo -n 'latest=true' >> $GITHUB_OUTPUT
        else
          echo -n 'latest=false' >> $GITHUB_OUTPUT
        fi

  publish:
    name: Build And Publish
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Dagger Build And Publish
      uses: dagger/dagger-for-github@8.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_USER: ${{ github.actor }}
        TAG: ${{ needs.prep.outputs.tag_name }}
        LATEST: ${{ needs.prep.outputs.latest }}
        REPOSITORY: workday/cuestomize
      with:
        version: "0.18.14"
        verb: call
        args: |
          build-and-publish --repository="$REPOSITORY" \
            --tag="$TAG" --also-tag-as-latest="$LATEST" \
            --username="$GITHUB_USER" --password=env:GITHUB_TOKEN \
            --platforms=linux/amd64,linux/arm64
